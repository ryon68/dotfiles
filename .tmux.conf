#=====================================
# tmux settings
#=====================================

# ==== Basic
# Default shell
# set -g default-shell /bin/bash
# set -g default-command /bin/bash
set -g default-shell /usr/local/bin/zsh
set -g default-command /usr/local/bin/bash
# Disable ESC delay
set -sg escape-time 0
# enable clipboard
set -g default-command "reattach-to-user-namespace -l zsh"

# ==== Reload config (r)
bind r source-file ~/.tmux.conf \; display "Reload Config!!"

# ==== Colors
# Enable 256 color
# set -g default-terminal "screen-256color"
# Enable true color
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
# default statusbar colors
set -g status-fg white
set -g status-bg black
set -g status-attr default
# default window title colors
setw -g window-status-fg default
setw -g window-status-bg default
setw -g window-status-attr default
# active window title colors
setw -g window-status-current-fg default
setw -g window-status-current-bg default
setw -g window-status-current-attr reverse
# pane border
set -g pane-border-fg brightblack
set -g pane-active-border-fg white
set -g pane-active-border-bg default
# message text
set -g message-fg yellow
set -g message-bg default
# pane number display
set -g display-panes-colour brightblack
set -g display-panes-active-colour white
# clock
setw -g clock-mode-colour yellow
# Copy mode colors
setw -g mode-fg cyan
setw -g mode-bg brightblack

# ==== Title of terminal
set -g set-titles on
set -g set-titles-string "tmux[#I:#W]"

# ==== Status line
#  start number1
set -g base-index 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
# Update interval
set -g status-interval 1
# status position
set -g status-position top
set -g status-justify centre
# Left
set -g status-left-length 90
set -g status-left "[#H][#S:#I.#P]"
# set -g status-left \
# "#{?client_prefix,#[reverse],}#[fg=brightyellow][#(whoami)@#h]#[fg=green][#S:#I.#P]  "
# main
set -g window-status-format "[#I:#W]"
setw -g window-status-current-format "[#I:#W]"
# set -g window-status-format "#[fg=cyan,bg=colour238] [#I:#W#F] #[default]"
# setw -g window-status-current-format "#[fg=white,bg=colour238,bold] [#I:#W#F] #[default]"
# Right
set -g status-right-length 90
set -g status-right "[%Y/%m/%d(%a) %H:%M]"
# set -g status-right \
  "#{?client_prefix,#[reverse],}"\
"#[fg=cyan][%Y/%m/%d(%a) %H:%M]"
# "#[fg=green]#(${HOME}/dotfiles/bin/git-echo-branch-tmux-current-pane)"\
# "#[fg=yellow]#(${HOME}/dotfiles/bin/git-echo-username-and-email)"\

# ==== Mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# ==== Ke mappings
# Prefix (^q)
unbind C-b
set -g prefix C-q
# send C-q
# bind C-q send-prefix

# previous window
bind C-q last-window

# pane
bind i display-panes

# exit pane
bind x kill-pane
# exit window
bind X kill-window

# move pane vi bind
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# resize pane vi bind
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# horizontal split by |
bind | split-window -h -c '#{pane_current_path}'
# vertical split by -
bind - split-window -v -c '#{pane_current_path}'

# ==== copy mode
# Vi binding
setw -g mode-keys vi
# enable vi for copy mode
bind -T copy-mode-vi v send -X begin-selection    # start copy mode
bind -T copy-mode-vi V send -X select-line        # line select
bind -T copy-mode-vi C-v send -X rectangle-toggle # block select
bind -T copy-mode-vi y send -X copy-selection     # yank
bind -T copy-mode-vi Y send -X copy-line          # line yank

# ==== Log output
# bind-key H pipe-pane -o 'cat >> $HOME/.tmux/tmux-#S-#I-#P_`date +%Y%m%d_%H%M%S`_#W.log' \; display-message 'Started logging to $HOME/.tmux/tmux-#S-#I-#P_`date +%Y%m%d_%H%M%S`_#W.log'
# bind-key h pipe-pane \; display-message 'Ended logging to $HOME/.tmux/tmux-#S-#I-#P_`date +%Y%m%d_%H%M%S`_#W.log'
